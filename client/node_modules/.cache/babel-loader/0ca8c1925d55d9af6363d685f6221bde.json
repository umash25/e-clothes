{"ast":null,"code":"import { all, call, put, takeLatest } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.action';\nimport { ShopActionTypes } from './shop.types';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\n;\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}\n;","map":{"version":3,"sources":["E:/umash/coding/reactApps/e-clothes/src/redux/shop/shop.saga.js"],"names":["all","call","put","takeLatest","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,yBAA3D;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,eAAjE;AACA,SAASC,eAAT,QAAgC,cAAhC;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,MAAI;AACA,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAACI,+BAAD,EAAkCO,QAAlC,CAAjC;AACA,UAAMV,GAAG,CAACI,uBAAuB,CAACQ,cAAD,CAAxB,CAAT;AACH,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,UAAMb,GAAG,CAACK,uBAAuB,CAACQ,KAAD,CAAxB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMb,UAAU,CACZK,eAAe,CAACS,uBADJ,EAEZR,qBAFY,CAAhB;AAIH;AAAA;AAED,OAAO,UAAUS,SAAV,GAAsB;AACzB,QAAMlB,GAAG,CAAC,CAACC,IAAI,CAACe,qBAAD,CAAL,CAAD,CAAT;AACH;AAAA","sourcesContent":["import { all, call, put, takeLatest } from 'redux-saga/effects';\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase'\r\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.action'\r\nimport { ShopActionTypes } from './shop.types'\r\n\r\nexport function* fetchCollectionsAsync() {\r\n    try {\r\n        const collectionRef = firestore.collection('collections');\r\n        const snapshot = yield collectionRef.get();\r\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\r\n        yield put(fetchCollectionsSuccess(collectionsMap));\r\n    } catch (error) {\r\n        yield put(fetchCollectionsFailure(error));\r\n    }\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n    yield takeLatest(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollectionsAsync\r\n    );\r\n};\r\n\r\nexport function* shopSagas() {\r\n    yield all([call(fetchCollectionsStart)])\r\n};"]},"metadata":{},"sourceType":"module"}