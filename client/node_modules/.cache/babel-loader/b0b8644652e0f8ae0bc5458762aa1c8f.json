{"ast":null,"code":"var _jsxFileName = \"E:\\\\umash\\\\coding\\\\reactApps\\\\e-clothes\\\\src\\\\components\\\\shop\\\\shop.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router';\nimport CollectionPage from '../../pages/collection/collection';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.action';\nimport WithSpinner from '../with-spinner/with-spinner';\nimport CollectionsOverview from '../collections-overview/collections-overview';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selector';\nimport CollectionsOverviewContainer from '../collections-overview/collection-overview.container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionsPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching,\n      isCollectionsLoaded\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionsOverviewContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsPageWithSpinner, {\n          isLoading: !isCollectionsLoaded,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionsPageWithSpinner\");","map":{"version":3,"sources":["E:/umash/coding/reactApps/e-clothes/src/components/shop/shop.jsx"],"names":["React","connect","Route","CollectionPage","fetchCollectionsStartAsync","WithSpinner","CollectionsOverview","createStructuredSelector","selectIsCollectionFetching","selectIsCollectionsLoaded","CollectionsOverviewContainer","CollectionsOverviewWithSpinner","CollectionsPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","isCollectionsLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,SAASC,0BAAT,QAA2C,8BAA3C;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,mBAAP,MAAgC,8CAAhC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,0BAAT,EAAqCC,yBAArC,QAAsE,gCAAtE;AACA,OAAOC,4BAAP,MAAyC,uDAAzC;;AAEA,MAAMC,8BAA8B,GAAGN,WAAW,CAACC,mBAAD,CAAlD;KAAMK,8B;AACN,MAAMC,0BAA0B,GAAGP,WAAW,CAACF,cAAD,CAA9C;MAAMS,0B;;AAEN,MAAMC,QAAN,SAAuBb,KAAK,CAACc,SAA7B,CAAuC;AACnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEX,MAAAA;AAAF,QAAiC,KAAKY,KAA5C;AACAZ,IAAAA,0BAA0B;AAC7B;;AAEDa,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,oBAAT;AAA+BC,MAAAA;AAA/B,QAAuD,KAAKJ,KAAlE;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,EAAjC;AAAoC,QAAA,SAAS,EAAEX;AAA/C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEQ,KAAK,CAACG,IAAK,gBAA3B;AACI,QAAA,MAAM,EAAGL,KAAD,iBAAW,QAAC,0BAAD;AAA4B,UAAA,SAAS,EAAE,CAACI,mBAAxC;AAAA,aAAgEJ;AAAhE;AAAA;AAAA;AAAA;AAAA;AADvB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAfkC;;AAgBtC;AAED,MAAMM,eAAe,GAAGf,wBAAwB,CAAC;AAC7CY,EAAAA,oBAAoB,EAAEX,0BADuB;AAE7CY,EAAAA,mBAAmB,EAAEX;AAFwB,CAAD,CAAhD;;AAKA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAK;AACpCpB,EAAAA,0BAA0B,EAAE,MACxBoB,QAAQ,CAACpB,0BAA0B,EAA3B;AAFwB,CAAL,CAAnC;;AAKA,eAAeH,OAAO,CAACqB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CV,QAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route } from 'react-router';\r\nimport CollectionPage from '../../pages/collection/collection';\r\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.action';\r\nimport WithSpinner from '../with-spinner/with-spinner'\r\nimport CollectionsOverview from '../collections-overview/collections-overview';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selector';\r\nimport CollectionsOverviewContainer from '../collections-overview/collection-overview.container';\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage)\r\n\r\nclass ShopPage extends React.Component {\r\n    componentDidMount() {\r\n        const { fetchCollectionsStartAsync } = this.props;\r\n        fetchCollectionsStartAsync();\r\n    }\r\n\r\n    render() {\r\n        const { match, isCollectionFetching, isCollectionsLoaded } = this.props;\r\n        return (\r\n            <div className='shop-page'>\r\n                <Route exact path={`${match.path}`} component={CollectionsOverviewContainer} />\r\n                <Route path={`${match.path}/:collectionId`}\r\n                    render={(props) => <CollectionsPageWithSpinner isLoading={!isCollectionsLoaded}{...props} />} />\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isCollectionFetching: selectIsCollectionFetching,\r\n    isCollectionsLoaded: selectIsCollectionsLoaded\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchCollectionsStartAsync: () =>\r\n        dispatch(fetchCollectionsStartAsync())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}