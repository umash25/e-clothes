{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyAsDspMDAD3GJiWeIurJJiAji4gr1lnvR0\",\n  authDomain: \"eclothes-db.firebaseapp.com\",\n  projectId: \"eclothes-db\",\n  storageBucket: \"eclothes-db.appspot.com\",\n  messagingSenderId: \"191956352723\",\n  appId: \"1:191956352723:web:78e351c26a3971386f5e26\",\n  measurementId: \"G-N7X09DLSDG\"\n};\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth}`);\n  const snapShot = userRef.get(userRef);\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('Firebase Error', error);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocument = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollections = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routename: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollections.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => auth.onAuthStateChanged(userAuth => {}));\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  'prompt': 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;","map":{"version":3,"sources":["E:/umash/coding/reactApps/e-clothes/src/firebase/firebase.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","addCollectionAndDocument","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollections","docs","map","title","items","data","routename","encodeURI","toLowerCase","id","reduce","accumulator","getCurrentUser","Promise","resolve","reject","auth","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth'\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyAsDspMDAD3GJiWeIurJJiAji4gr1lnvR0\",\r\n    authDomain: \"eclothes-db.firebaseapp.com\",\r\n    projectId: \"eclothes-db\",\r\n    storageBucket: \"eclothes-db.appspot.com\",\r\n    messagingSenderId: \"191956352723\",\r\n    appId: \"1:191956352723:web:78e351c26a3971386f5e26\",\r\n    measurementId: \"G-N7X09DLSDG\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    if (!userAuth) return;\r\n    const userRef = firestore.doc(`users/${userAuth}`);\r\n    const snapShot = userRef.get(userRef);\r\n\r\n    if (!snapShot.exists) {\r\n        const { displayName, email } = userAuth;\r\n        const createdAt = new Date();\r\n        try {\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                ...additionalData\r\n            });\r\n        } catch (error) {\r\n            console.log('Firebase Error', error);\r\n        }\r\n    }\r\n    return userRef;\r\n}\r\n\r\nexport const addCollectionAndDocument = async (collectionKey, objectsToAdd) => {\r\n    const collectionRef = firestore.collection(collectionKey);\r\n    const batch = firestore.batch();\r\n    objectsToAdd.forEach(obj => {\r\n        const newDocRef = collectionRef.doc();\r\n        batch.set(newDocRef, obj);\r\n    });\r\n    return await batch.commit();\r\n};\r\n\r\nexport const convertCollectionsSnapshotToMap = collections => {\r\n    const transformedCollections = collections.docs.map(doc => {\r\n        const { title, items } = doc.data();\r\n\r\n        return {\r\n            routename: encodeURI(title.toLowerCase()),\r\n            id: doc.id,\r\n            title,\r\n            items\r\n        };\r\n    });\r\n\r\n    return transformedCollections.reduce((accumulator, collection) => {\r\n        accumulator[collection.title.toLowerCase()] = collection;\r\n        return accumulator;\r\n    }, {})\r\n};\r\n\r\nexport const getCurrentUser = () => {\r\n    return new Promise((resolve, reject) => auth.onAuthStateChanged(userAuth => {\r\n\r\n    }))\r\n}\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\r\ngoogleProvider.setCustomParameters({ 'prompt': 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}