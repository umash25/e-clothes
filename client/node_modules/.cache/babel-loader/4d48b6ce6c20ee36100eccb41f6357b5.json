{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { auth, createUserProfileDocument, googleProvider } from '../../firebase/firebase';\nimport { signInFailure, signInSuccess } from './user.action';\nimport { UserActionTypes } from './user.types';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* googleSignIn() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* emailSignIn({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* checkUserSession() {}\nexport function* onSignInWithGoogle() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, googleSignIn);\n}\n;\nexport function* onSignInWithEmail() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, emailSignIn);\n}\n;\nexport function* userSagas() {\n  yield all([call(onSignInWithGoogle), call(onSignInWithEmail)]);\n}\n;","map":{"version":3,"sources":["E:/umash/coding/reactApps/e-clothes/src/redux/users/user.sagas.js"],"names":["takeLatest","put","all","call","auth","createUserProfileDocument","googleProvider","signInFailure","signInSuccess","UserActionTypes","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","googleSignIn","user","signInWithPopup","emailSignIn","payload","email","password","signInWithEmailAndPassword","checkUserSession","onSignInWithGoogle","GOOGLE_SIGN_IN_START","onSignInWithEmail","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,SAASC,IAAT,EAAeC,yBAAf,EAA0CC,cAA1C,QAAgE,yBAAhE;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,eAA7C;AACA,SAASC,eAAT,QAAgC,cAAhC;AAEA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;AAC/C,MAAI;AACA,UAAMC,OAAO,GAAG,MAAMT,IAAI,CAACE,yBAAD,EAA4BM,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMb,GAAG,CAACO,aAAa,CAAC;AACpBO,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADG;AACC,SAAGF,YAAY,CAACG,IAAb;AADJ,KAAD,CAAd,CAAT;AAGH,GAND,CAME,OAAOC,KAAP,EAAc;AACZ,UAAMhB,GAAG,CAACM,aAAa,CAACU,KAAD,CAAd,CAAT;AACH;AACJ;AAAA;AAED,OAAO,UAAUC,YAAV,GAAyB;AAC5B,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMf,IAAI,CAACgB,eAAL,CAAqBd,cAArB,CAAvB;AACA,UAAMI,uBAAuB,CAACS,IAAD,CAA7B;AACH,GAHD,CAGE,OAAOF,KAAP,EAAc;AACZ,UAAMhB,GAAG,CAACM,aAAa,CAACU,KAAD,CAAd,CAAT;AACH;AACJ;AAAA;AAED,OAAO,UAAUI,WAAV,CAAsB;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAAtB,EAAwD;AAC3D,MAAI;AACA,UAAM;AAAEL,MAAAA;AAAF,QAAW,MAAMf,IAAI,CAACqB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMd,uBAAuB,CAACS,IAAD,CAA7B;AACH,GAHD,CAGE,OAAOF,KAAP,EAAc;AACZ,UAAMhB,GAAG,CAACM,aAAa,CAACU,KAAD,CAAd,CAAT;AACH;AACJ;AAAA;AAED,OAAO,UAAUS,gBAAV,GAA6B,CAEnC;AAED,OAAO,UAAUC,kBAAV,GAA+B;AAClC,QAAM3B,UAAU,CAACS,eAAe,CAACmB,oBAAjB,EAAuCV,YAAvC,CAAhB;AACH;AAAA;AAED,OAAO,UAAUW,iBAAV,GAA8B;AACjC,QAAM7B,UAAU,CAACS,eAAe,CAACqB,mBAAjB,EAAsCT,WAAtC,CAAhB;AACH;AAAA;AAED,OAAO,UAAUU,SAAV,GAAsB;AACzB,QAAM7B,GAAG,CAAC,CAACC,IAAI,CAACwB,kBAAD,CAAL,EAA2BxB,IAAI,CAAC0B,iBAAD,CAA/B,CAAD,CAAT;AACH;AAAA","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\nimport { auth, createUserProfileDocument, googleProvider } from '../../firebase/firebase';\r\nimport { signInFailure, signInSuccess } from './user.action';\r\nimport { UserActionTypes } from './user.types';\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n    try {\r\n        const userRef = yield call(createUserProfileDocument, userAuth);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(signInSuccess({\r\n            id: userSnapshot.id, ...userSnapshot.data()\r\n        }));\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n};\r\n\r\nexport function* googleSignIn() {\r\n    try {\r\n        const { user } = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapshotFromUserAuth(user);\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n};\r\n\r\nexport function* emailSignIn({ payload: { email, password } }) {\r\n    try {\r\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n        yield getSnapshotFromUserAuth(user);\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n};\r\n\r\nexport function* checkUserSession() {\r\n\r\n}\r\n\r\nexport function* onSignInWithGoogle() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, googleSignIn);\r\n};\r\n\r\nexport function* onSignInWithEmail() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, emailSignIn);\r\n};\r\n\r\nexport function* userSagas() {\r\n    yield all([call(onSignInWithGoogle), call(onSignInWithEmail)]);\r\n};"]},"metadata":{},"sourceType":"module"}