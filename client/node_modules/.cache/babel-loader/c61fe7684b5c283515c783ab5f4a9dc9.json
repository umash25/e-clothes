{"ast":null,"code":"var _jsxFileName = \"E:\\\\umash\\\\coding\\\\reactApps\\\\e-clothes\\\\src\\\\components\\\\signin\\\\signin.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './signin.scss';\nimport FormInput from '../../components/form-input/form-input.jsx';\nimport CustomButton from '../../components/custom-button/custom-button.jsx';\nimport { connect } from 'react-redux';\nimport { emailSignInStart, googleSignInStart } from '../../redux/users/user.action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = () => {\n  _s();\n\n  const [email, setEmail] = useState(null);\n  const [password, setPassword] = useState(null);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      emailSignInStart\n    } = this.props;\n    const {\n      email,\n      password\n    } = this.state;\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value\n    } = event.target;\n    setEmail(eve);\n  };\n\n  const {\n    googleSignInStart\n  } = this.props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        label: \"Email\",\n        value: email,\n        handleChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        label: \"Password\",\n        value: password,\n        handleChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          isGoogleSignIn: true,\n          onClick: googleSignInStart,\n          children: \"Sign In with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignIn, \"rvrPfgY8z46SgMJHQvJdz4eLI2A=\");\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["E:/umash/coding/reactApps/e-clothes/src/components/signin/signin.jsx"],"names":["React","useState","FormInput","CustomButton","connect","emailSignInStart","googleSignInStart","SignIn","email","setEmail","password","setPassword","handleSubmit","event","preventDefault","props","state","handleChange","value","target","eve","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,eAAP;AACA,OAAOC,SAAP,MAAsB,4CAAtB;AACA,OAAOC,YAAP,MAAyB,kDAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,EAA2BC,iBAA3B,QAAoD,+BAApD;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,IAAD,CAAxC;;AAEA,QAAMW,YAAY,GAAG,MAAOC,KAAP,IAAiB;AAClCA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAM;AAAET,MAAAA;AAAF,QAAuB,KAAKU,KAAlC;AACA,UAAM;AAAEP,MAAAA,KAAF;AAASE,MAAAA;AAAT,QAAsB,KAAKM,KAAjC;AACAX,IAAAA,gBAAgB,CAACG,KAAD,EAAQE,QAAR,CAAhB;AACH,GALD;;AAOA,QAAMO,YAAY,GAAGJ,KAAK,IAAI;AAC1B,UAAM;AAAEK,MAAAA;AAAF,QAAYL,KAAK,CAACM,MAAxB;AACAV,IAAAA,QAAQ,CAACW,GAAD,CAAR;AACH,GAHD;;AAMA,QAAM;AAAEd,IAAAA;AAAF,MAAwB,KAAKS,KAAnC;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAM,MAAA,QAAQ,EAAEH,YAAhB;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,IAAI,EAAC,OAAhB;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,KAAK,EAAC,OAFV;AAGI,QAAA,KAAK,EAAEJ,KAHX;AAII,QAAA,YAAY,EAAES,YAJlB;AAKI,QAAA,QAAQ;AALZ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI,QAAC,SAAD;AAAW,QAAA,IAAI,EAAC,UAAhB;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,KAAK,EAAC,UAFV;AAGI,QAAA,KAAK,EAAEP,QAHX;AAII,QAAA,YAAY,EAAEO,YAJlB;AAKI,QAAA,QAAQ;AALZ;AAAA;AAAA;AAAA;AAAA,cAPJ,eAaI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,QAAnB;AACI,UAAA,cAAc,MADlB;AAEI,UAAA,OAAO,EAAEX,iBAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH,CAhDD;;GAAMC,M;;KAAAA,M;;AAmDN,MAAMc,kBAAkB,GAAGC,QAAQ,KAAK;AACpChB,EAAAA,iBAAiB,EAAE,MAAMgB,QAAQ,CAAChB,iBAAiB,EAAlB,CADG;AAEpCD,EAAAA,gBAAgB,EAAE,CAACG,KAAD,EAAQE,QAAR,KACdY,QAAQ,CAACjB,gBAAgB,CAAC;AAAEG,IAAAA,KAAF;AAASE,IAAAA;AAAT,GAAD,CAAjB;AAHwB,CAAL,CAAnC;;AAMA,eAAeN,OAAO,CAAC,IAAD,EAAOiB,kBAAP,CAAP,CAAkCd,MAAlC,CAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport './signin.scss';\r\nimport FormInput from '../../components/form-input/form-input.jsx';\r\nimport CustomButton from '../../components/custom-button/custom-button.jsx';\r\nimport { connect } from 'react-redux';\r\nimport { emailSignInStart, googleSignInStart } from '../../redux/users/user.action';\r\n\r\nconst SignIn = () => {\r\n    const [email, setEmail] = useState(null);\r\n    const [password, setPassword] = useState(null);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const { emailSignInStart } = this.props;\r\n        const { email, password } = this.state;\r\n        emailSignInStart(email, password);\r\n    }\r\n\r\n    const handleChange = event => {\r\n        const { value } = event.target;\r\n        setEmail(eve)\r\n    }\r\n\r\n\r\n    const { googleSignInStart } = this.props;\r\n    return (\r\n        <div className=\"sign-in\">\r\n            <h2 className=\"title\">I already have an account</h2>\r\n            <span>Sign in with your email and password</span>\r\n\r\n            <form onSubmit={handleSubmit} >\r\n                <FormInput name=\"email\"\r\n                    type=\"email\"\r\n                    label=\"Email\"\r\n                    value={email}\r\n                    handleChange={handleChange}\r\n                    required />\r\n                <FormInput name=\"password\"\r\n                    type=\"password\"\r\n                    label=\"Password\"\r\n                    value={password}\r\n                    handleChange={handleChange}\r\n                    required />\r\n                <div className=\"buttons\">\r\n                    <CustomButton type=\"submit\">Sign In</CustomButton>\r\n                    <CustomButton type=\"button\"\r\n                        isGoogleSignIn\r\n                        onClick={googleSignInStart}>\r\n                        { }\r\n                        Sign In with Google{ }\r\n                    </CustomButton>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) =>\r\n        dispatch(emailSignInStart({ email, password }))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}