{"ast":null,"code":"var _jsxFileName = \"E:\\\\Umash\\\\Coding\\\\reactApps\\\\e-clothes\\\\client\\\\src\\\\components\\\\signup\\\\signup.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './signup.scss';\nimport FormInput from '../../components/form-input/form-input.jsx';\nimport CustomButton from '../../components/custom-button/custom-button.jsx';\nimport { signUpStart } from '../../redux/users/user.action';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  _s();\n\n  const [userCredentials, setCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords doesn't match\");\n    }\n\n    ;\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"I don't have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign up with your credentials\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"displayName\",\n        type: \"text\",\n        label: \"Name\",\n        value: displayName,\n        handleChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        label: \"Email\",\n        value: email,\n        handleChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        label: \"Password\",\n        value: password,\n        handleChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"confirmPassword\",\n        type: \"password\",\n        label: \"Confirm Password\",\n        value: confirmPassword,\n        handleChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUp, \"e6+6NEwBuWk1D/ZhJFN/MjtHuCI=\");\n\n_c = SignUp;\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["E:/Umash/Coding/reactApps/e-clothes/client/src/components/signup/signup.jsx"],"names":["React","useState","FormInput","CustomButton","signUpStart","connect","SignUp","userCredentials","setCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport './signup.scss';\r\nimport FormInput from '../../components/form-input/form-input.jsx';\r\nimport CustomButton from '../../components/custom-button/custom-button.jsx';\r\nimport { signUpStart } from '../../redux/users/user.action';\r\nimport { connect } from 'react-redux';\r\n\r\nconst SignUp = ({ signUpStart }) => {\r\n    const [userCredentials, setCredentials] = useState({\r\n        displayName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    });\r\n\r\n    const { displayName, email, password, confirmPassword } = userCredentials;\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            alert(\"Passwords doesn't match\");\r\n        };\r\n        signUpStart({ displayName, email, password });\r\n    }\r\n\r\n    const handleChange = event => {\r\n        const { value, name } = event.target;\r\n        setCredentials({ ...userCredentials, [name]: value })\r\n    }\r\n\r\n    return (\r\n        <div className=\"sign-up\">\r\n            <h2 className=\"title\">I don't have an account</h2>\r\n            <span>Sign up with your credentials</span>\r\n\r\n            <form onSubmit={handleSubmit} >\r\n                <FormInput name=\"displayName\"\r\n                    type=\"text\"\r\n                    label=\"Name\"\r\n                    value={displayName}\r\n                    handleChange={handleChange}\r\n                    required />\r\n                <FormInput name=\"email\"\r\n                    type=\"email\"\r\n                    label=\"Email\"\r\n                    value={email}\r\n                    handleChange={handleChange}\r\n                    required />\r\n                <FormInput name=\"password\"\r\n                    type=\"password\"\r\n                    label=\"Password\"\r\n                    value={password}\r\n                    handleChange={handleChange}\r\n                    required />\r\n                <FormInput name=\"confirmPassword\"\r\n                    type=\"password\"\r\n                    label=\"Confirm Password\"\r\n                    value={confirmPassword}\r\n                    handleChange={handleChange}\r\n                    required />\r\n                <CustomButton type=\"submit\">Sign Up</CustomButton>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}