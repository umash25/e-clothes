{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyAsDspMDAD3GJiWeIurJJiAji4gr1lnvR0\",\n  authDomain: \"eclothes-db.firebaseapp.com\",\n  projectId: \"eclothes-db\",\n  storageBucket: \"eclothes-db.appspot.com\",\n  messagingSenderId: \"191956352723\",\n  appId: \"1:191956352723:web:78e351c26a3971386f5e26\",\n  measurementId: \"G-N7X09DLSDG\"\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider(); // provider.setCustomParameters({ 'prompt': 'select_account' });\n// export const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport const signInWithGoogle = firebase.auth().signInWithPopup(provider).then(result => {\n  /** @type {firebase.auth.OAuthCredential} */\n  var credential = result.credential; // This gives you a Google Access Token. You can use it to access the Google API.\n\n  var token = credential.accessToken; // The signed-in user info.\n\n  var user = result.user; // ...\n}).catch(error => {\n  // Handle Errors here.\n  var errorCode = error.code;\n  var errorMessage = error.message; // The email of the user's account used.\n\n  var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n  var credential = error.credential; // ...\n});\nexport default firebase;","map":{"version":3,"sources":["E:/umash/coding/reactApps/e-clothes/src/firebase/firebase.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","firestore","provider","GoogleAuthProvider","signInWithGoogle","signInWithPopup","then","result","credential","token","accessToken","user","catch","error","errorCode","code","errorMessage","message","email"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,6BAFD;AAGXC,EAAAA,SAAS,EAAE,aAHA;AAIXC,EAAAA,aAAa,EAAE,yBAJJ;AAKXC,EAAAA,iBAAiB,EAAE,cALR;AAMXC,EAAAA,KAAK,EAAE,2CANI;AAOXC,EAAAA,aAAa,EAAE;AAPJ,CAAf;AAUAR,QAAQ,CAACS,aAAT,CAAuBR,MAAvB;AAEA,OAAO,MAAMS,IAAI,GAAGV,QAAQ,CAACU,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGX,QAAQ,CAACW,SAAT,EAAlB;AAEP,MAAMC,QAAQ,GAAG,IAAIZ,QAAQ,CAACU,IAAT,CAAcG,kBAAlB,EAAjB,C,CACA;AACA;;AACA,OAAO,MAAMC,gBAAgB,GAAGd,QAAQ,CAACU,IAAT,GAC3BK,eAD2B,CACXH,QADW,EAE3BI,IAF2B,CAErBC,MAAD,IAAY;AACd;AACA,MAAIC,UAAU,GAAGD,MAAM,CAACC,UAAxB,CAFc,CAId;;AACA,MAAIC,KAAK,GAAGD,UAAU,CAACE,WAAvB,CALc,CAMd;;AACA,MAAIC,IAAI,GAAGJ,MAAM,CAACI,IAAlB,CAPc,CAQd;AACH,CAX2B,EAWzBC,KAXyB,CAWlBC,KAAD,IAAW;AAChB;AACA,MAAIC,SAAS,GAAGD,KAAK,CAACE,IAAtB;AACA,MAAIC,YAAY,GAAGH,KAAK,CAACI,OAAzB,CAHgB,CAIhB;;AACA,MAAIC,KAAK,GAAGL,KAAK,CAACK,KAAlB,CALgB,CAMhB;;AACA,MAAIV,UAAU,GAAGK,KAAK,CAACL,UAAvB,CAPgB,CAQhB;AACH,CApB2B,CAAzB;AAsBP,eAAelB,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth'\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyAsDspMDAD3GJiWeIurJJiAji4gr1lnvR0\",\r\n    authDomain: \"eclothes-db.firebaseapp.com\",\r\n    projectId: \"eclothes-db\",\r\n    storageBucket: \"eclothes-db.appspot.com\",\r\n    messagingSenderId: \"191956352723\",\r\n    appId: \"1:191956352723:web:78e351c26a3971386f5e26\",\r\n    measurementId: \"G-N7X09DLSDG\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n// provider.setCustomParameters({ 'prompt': 'select_account' });\r\n// export const signInWithGoogle = () => auth.signInWithPopup(provider);\r\nexport const signInWithGoogle = firebase.auth()\r\n    .signInWithPopup(provider)\r\n    .then((result) => {\r\n        /** @type {firebase.auth.OAuthCredential} */\r\n        var credential = result.credential;\r\n\r\n        // This gives you a Google Access Token. You can use it to access the Google API.\r\n        var token = credential.accessToken;\r\n        // The signed-in user info.\r\n        var user = result.user;\r\n        // ...\r\n    }).catch((error) => {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        var email = error.email;\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential;\r\n        // ...\r\n    });\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}