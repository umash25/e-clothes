{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { auth, createUserProfileDocument, googleProvider } from '../../firebase/firebase';\nimport { signInFailure, signInSuccess } from './user.action';\nimport { UserActionTypes } from './user.types';\nexport function* googleSignIn() {\n  try {\n    const {\n      user\n    } = auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* emailSignIn({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* onSignInWithGoogle() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, googleSignIn);\n}\n;\nexport function* onSignInWithEmail() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, emailSignIn);\n}\n;\nexport function* userSagas() {\n  yield all([call(onSignInWithGoogle), call(onSignInWithEmail)]);\n}","map":{"version":3,"sources":["E:/umash/coding/reactApps/e-clothes/src/redux/users/user.sagas.js"],"names":["takeLatest","put","all","call","auth","createUserProfileDocument","googleProvider","signInFailure","signInSuccess","UserActionTypes","googleSignIn","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","emailSignIn","payload","email","password","signInWithEmailAndPassword","onSignInWithGoogle","GOOGLE_SIGN_IN_START","onSignInWithEmail","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,SAASC,IAAT,EAAeC,yBAAf,EAA0CC,cAA1C,QAAgE,yBAAhE;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,eAA7C;AACA,SAASC,eAAT,QAAgC,cAAhC;AAEA,OAAO,UAAUC,YAAV,GAAyB;AAC5B,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAWP,IAAI,CAACQ,eAAL,CAAqBN,cAArB,CAAjB;AACA,UAAMO,OAAO,GAAG,MAAMV,IAAI,CAACE,yBAAD,EAA4BM,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACO,aAAa,CAAC;AACpBQ,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADG;AACC,SAAGF,YAAY,CAACG,IAAb;AADJ,KAAD,CAAd,CAAT;AAGH,GAPD,CAOE,OAAOC,KAAP,EAAc;AACZ,UAAMjB,GAAG,CAACM,aAAa,CAACW,KAAD,CAAd,CAAT;AACH;AACJ;AAAA;AAED,OAAO,UAAUC,WAAV,CAAsB;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAAtB,EAAwD;AAC3D,MAAI;AACA,UAAM;AAAEX,MAAAA;AAAF,QAAW,MAAMP,IAAI,CAACmB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMT,OAAO,GAAG,MAAMV,IAAI,CAACE,yBAAD,EAA4BM,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACO,aAAa,CAAC;AACpBQ,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADG;AACC,SAAGF,YAAY,CAACG,IAAb;AADJ,KAAD,CAAd,CAAT;AAGH,GAPD,CAOE,OAAOC,KAAP,EAAc;AACZ,UAAMjB,GAAG,CAACM,aAAa,CAACW,KAAD,CAAd,CAAT;AACH;AACJ;AAAA;AAED,OAAO,UAAUM,kBAAV,GAA+B;AAClC,QAAMxB,UAAU,CAACS,eAAe,CAACgB,oBAAjB,EAAuCf,YAAvC,CAAhB;AACH;AAAA;AAED,OAAO,UAAUgB,iBAAV,GAA8B;AACjC,QAAM1B,UAAU,CAACS,eAAe,CAACkB,mBAAjB,EAAsCR,WAAtC,CAAhB;AACH;AAAA;AAED,OAAO,UAAUS,SAAV,GAAsB;AACzB,QAAM1B,GAAG,CAAC,CAACC,IAAI,CAACqB,kBAAD,CAAL,EAA2BrB,IAAI,CAACuB,iBAAD,CAA/B,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\nimport { auth, createUserProfileDocument, googleProvider } from '../../firebase/firebase';\r\nimport { signInFailure, signInSuccess } from './user.action';\r\nimport { UserActionTypes } from './user.types';\r\n\r\nexport function* googleSignIn() {\r\n    try {\r\n        const { user } = auth.signInWithPopup(googleProvider);\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(signInSuccess({\r\n            id: userSnapshot.id, ...userSnapshot.data()\r\n        }));\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n};\r\n\r\nexport function* emailSignIn({ payload: { email, password } }) {\r\n    try {\r\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(signInSuccess({\r\n            id: userSnapshot.id, ...userSnapshot.data()\r\n        }));\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n};\r\n\r\nexport function* onSignInWithGoogle() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, googleSignIn);\r\n};\r\n\r\nexport function* onSignInWithEmail() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, emailSignIn);\r\n};\r\n\r\nexport function* userSagas() {\r\n    yield all([call(onSignInWithGoogle), call(onSignInWithEmail)]);\r\n}"]},"metadata":{},"sourceType":"module"}