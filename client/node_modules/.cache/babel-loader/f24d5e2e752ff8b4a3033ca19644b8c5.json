{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { auth, createUserProfileDocument, getCurrentUser, googleProvider } from '../../firebase/firebase';\nimport { signInFailure, signInSuccess, signOutFailure, signOutSuccess } from './user.action';\nimport { UserActionTypes } from './user.types';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* googleSignIn() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* emailSignIn({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* signUp() {\n  const user = yield auth.createUserWithEmailAndPassword(email, password);\n  const userAuth = yield createUserProfileDocument(user);\n}\n;\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n;\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* onSignInWithGoogle() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, googleSignIn);\n}\n;\nexport function* onSignInWithEmail() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, emailSignIn);\n}\n;\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n;\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n;\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\n;\nexport function* userSagas() {\n  yield all([call(onSignInWithGoogle), call(onSignInWithEmail), call(onCheckUserSession), call(isUserAuthenticated), call(onSignOutStart)]);\n}\n;","map":{"version":3,"sources":["E:/umash/coding/reactApps/e-clothes/src/redux/users/user.sagas.js"],"names":["takeLatest","put","all","call","auth","createUserProfileDocument","getCurrentUser","googleProvider","signInFailure","signInSuccess","signOutFailure","signOutSuccess","UserActionTypes","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","googleSignIn","user","signInWithPopup","emailSignIn","payload","email","password","signInWithEmailAndPassword","signUp","createUserWithEmailAndPassword","signOut","isUserAuthenticated","onSignInWithGoogle","GOOGLE_SIGN_IN_START","onSignInWithEmail","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\nimport { auth, createUserProfileDocument, getCurrentUser, googleProvider } from '../../firebase/firebase';\r\nimport { signInFailure, signInSuccess, signOutFailure, signOutSuccess } from './user.action';\r\nimport { UserActionTypes } from './user.types';\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n    try {\r\n        const userRef = yield call(createUserProfileDocument, userAuth);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(signInSuccess({\r\n            id: userSnapshot.id, ...userSnapshot.data()\r\n        }));\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n};\r\n\r\nexport function* googleSignIn() {\r\n    try {\r\n        const { user } = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapshotFromUserAuth(user);\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n};\r\n\r\nexport function* emailSignIn({ payload: { email, password } }) {\r\n    try {\r\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n        yield getSnapshotFromUserAuth(user);\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n};\r\n\r\nexport function* signUp() {\r\n    const user = yield auth.createUserWithEmailAndPassword(email, password);\r\n    const userAuth = yield createUserProfileDocument(user,)\r\n};\r\n\r\nexport function* signOut() {\r\n    try {\r\n        yield auth.signOut();\r\n        yield put(signOutSuccess());\r\n    } catch (error) {\r\n        yield put(signOutFailure(error));\r\n    }\r\n};\r\n\r\nexport function* isUserAuthenticated() {\r\n    try {\r\n        const userAuth = yield getCurrentUser();\r\n        if (!userAuth) return;\r\n        yield getSnapshotFromUserAuth(userAuth)\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n};\r\n\r\nexport function* onSignInWithGoogle() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, googleSignIn);\r\n};\r\n\r\nexport function* onSignInWithEmail() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, emailSignIn);\r\n};\r\n\r\nexport function* onCheckUserSession() {\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\r\n};\r\n\r\nexport function* onSignOutStart() {\r\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\r\n};\r\n\r\nexport function* onSignUpStart() {\r\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp)\r\n};\r\n\r\nexport function* userSagas() {\r\n    yield all([\r\n        call(onSignInWithGoogle),\r\n        call(onSignInWithEmail),\r\n        call(onCheckUserSession),\r\n        call(isUserAuthenticated),\r\n        call(onSignOutStart)\r\n    ]);\r\n};"]},"metadata":{},"sourceType":"module"}